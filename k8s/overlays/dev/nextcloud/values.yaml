# Based on https://github.com/nextcloud/helm/blob/nextcloud-3.5.21/charts/nextcloud/values.yaml
---

## Official nextcloud image version
## ref: https://hub.docker.com/r/library/nextcloud/tags/
##
image:
  flavor: fpm
  repository: nextcloud
  # tag: 24.0.3-apache
  pullPolicy: IfNotPresent
  # pullSecrets:
  #   - myRegistrKeySecretName

nameOverride: ""
fullnameOverride: ""
podAnnotations: {}
deploymentAnnotations: {}
deploymentLabels: {}

# Number of replicas to be deployed
replicaCount: 1

phpClientHttpsFix:
  enabled: false
  protocol: https

nextcloud:
  host: localhost
  ## Use an existing secret
  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    usernameKey: nextcloud-username
    passwordKey: nextcloud-password
    tokenKey: nextcloud-token
#    smtpUsernameKey: smtp-username
#    smtpPasswordKey: smtp-password
  update: 0
  # If web server is not binding default port, you can define it
  containerPort: 80
#  datadir: /var/www/html/data
#  persistence:
#    subPath:
  mail:
    enabled: false
#    fromAddress: user
#    domain: domain.com
#    smtp:
#      host: domain.com
#      secure: ssl
#      port: 465
#      authtype: LOGIN
#      name: user
#      password: pass

  ##
  ## Extra environment variables
  extraEnv:
    - name: PHP_MEMORY_LIMIT
      value: 2G
    - name: PHP_UPLOAD_LIMIT
      value: 10G

nginx:
  ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
  enabled: true
  image:
    repository: nginx
    tag: alpine
    pullPolicy: IfNotPresent

  config:
    # This generates the default nginx config as per the nextcloud documentation
    default: true
    # custom: |-
    #     worker_processes  1;..

  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

internalDatabase:
  enabled: false
  name: nextcloud

##
## External database configuration
##
externalDatabase:
  enabled: true

  ## Supported database engines: mysql or postgresql
  type: mysql

  ## Use a existing secret
  existingSecret:
    enabled: true
    secretName: mariadb-secret
    usernameKey: mariadb-user
    passwordKey: mariadb-password
    hostKey: mariadb-host
    databaseKey: mariadb-database

##
## MariaDB chart configuration
## ref: https://github.com/bitnami/charts/tree/main/bitnami/mariadb
##
mariadb:
  ## Whether to deploy a mariadb server from the bitnami mariab db helm chart
  # to satisfy the applications database requirements. if you want to deploy this bitnami mariadb, set this and externalDatabase to true
  # To use an ALREADY DEPLOYED mariadb database, set this to false and configure the externalDatabase parameters
  enabled: true

  auth:
    database: nextcloud
    username: nextcloud
    # Use existing secret (auth.rootPassword, auth.password, and auth.replicationPassword will be ignored).
    # secret must contain the keys mariadb-root-password, mariadb-replication-password and mariadb-password
    existingSecret: mariadb-secret

  architecture: standalone

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  primary:
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    persistence:
      enabled: true
      storageClass: manual
      accessMode: ReadWriteOnce
      size: 4Gi
      selector:
        matchLabels:
          target-app: nextcloud-mariadb

##
## Redis chart configuration
## for more options see https://github.com/bitnami/charts/tree/main/bitnami/redis
##
redis:
  enabled: true
  auth:
    enabled: true
    # name of an existing secret with RedisÂ® credentials (instead of auth.password), must be created ahead of time
    existingSecret: redis-secret
    # Password key to be retrieved from existing secret
    existingSecretPasswordKey: redis-password
  architecture: standalone
  master:
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    persistence:
      enabled: true
      storageClass: manual
      accessModes:
        - ReadWriteOnce
      size: 2Gi
      selector:
        matchLabels:
          target-app: nextcloud-redis

service:
  type: NodePort
  port: 80
  loadBalancerIP: nil
  nodePort: 31000

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # Nextcloud Data (/var/www/html)
  enabled: true
  annotations: {}
  ## nextcloud data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim: nextcloud-files-pvc

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 1000m
    memory: 1024Mi
  limits:
    cpu: 2000m
    memory: 2048Mi
